#optimizer : {
#  type: AdamW,
#  kwargs: {
#  lr : 0.001,
#  weight_decay : 0.05
#}}
#
#scheduler: {
#  type: CosLR,
#  kwargs: {
#    epochs: 300,
#    initial_epochs : 10
#}}
#
#dataset : {
#  train : { _base_: cfgs/dataset_configs/ShapeNet-55.yaml,
#            others: {subset: 'train', npoints: 1024}},
#  val : { _base_: cfgs/dataset_configs/ShapeNet-55.yaml,
#            others: {subset: 'test', npoints: 1024}},
#  test : { _base_: cfgs/dataset_configs/ShapeNet-55.yaml,
#            others: {subset: 'test', npoints: 1024}},
#  svm: {
#          train: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
#                    others: {partition: 'train', num_points: 1024}},
#          val: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
#                    others: {partition: 'test', num_points: 1024}},
#          test: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
#                    others: {partition: 'test', num_points: 1024}}}}
#
##dataset : {
##  train : { _base_: cfgs/dataset_configs/OmniObject3D_1k.yaml,
##            others: {subset: 'train', npoints: 1024}},
##  val : { _base_: cfgs/dataset_configs/OmniObject3D_1k.yaml,
##            others: {subset: 'test', npoints: 1024}},
##  test : { _base_: cfgs/dataset_configs/OmniObject3D_1k.yaml,
##            others: {subset: 'test', npoints: 1024}},
##  svm: {
##          train: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
##                    others: {partition: 'train', num_points: 1024}},
##          val: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
##                    others: {partition: 'test', num_points: 1024}},
##          test: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
##                    others: {partition: 'test', num_points: 1024}}}}
#
#transformer_config: {
#    mask_ratio: 0.6,
#    mask_type: 'rand',
#    trans_dim: 384,
#    encoder_dims: 384,
#    depth: 12,
#    drop_path_rate: 0.1,
#    num_heads: 8,
#    decoder_depth: 4,
#    decoder_num_heads: 8,
#    radius: 0.3
#  }
#NAME: Point_MAE_RIConv,
#group_size: 64,
#num_group: 256,
#loss: cdl2,
#model : {
#  NAME: Point_MAE_RIConv,
#  group_size: 64,
#  num_group: 256,
#  loss: cdl2,
#  transformer_config: {
#    mask_ratio: 0.6,
#    mask_type: 'rand',
#    trans_dim: 384,
#    encoder_dims: 384,
#    depth: 12,
#    drop_path_rate: 0.1,
#    num_heads: 8,
#    decoder_depth: 4,
#    decoder_num_heads: 8,
#    radius: 0.3
#  }
#}
#
#npoints: 1024
#total_bs : 128
#step_per_update : 1
#max_epoch : 300



optimizer : {
  type: AdamW,
  kwargs: {
  lr : 0.0005,
  weight_decay : 0.05
}}

scheduler: {
  type: CosLR,
  kwargs: {
    epochs: 300,
    initial_epochs : 10
}}

dataset : {
  train : { _base_: cfgs/dataset_configs/ShapeNet-55.yaml,
            others: {subset: 'train', npoints: 1024, whole: True}},
  val : { _base_: cfgs/dataset_configs/ScanObjectNN_objectbg.yaml,
            others: {subset: 'test', bs: 64}},
  val_rot : { _base_: cfgs/dataset_configs/ScanObjectNN_objectbg.yaml,
            others: {subset: 'test_rot', bs: 64}},
  extra_train : { _base_: cfgs/dataset_configs/ScanObjectNN_objectbg.yaml,
            others: {subset: 'train', bs: 4}},
  svm: {
          train: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
                    others: {partition: 'train', num_points: 1024}},
          val: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
                    others: {partition: 'test', num_points: 1024}},
          test: { _base_: cfgs/dataset_configs/ModelNet40_SVM.yaml,
                    others: {partition: 'test', num_points: 1024}}}}
model : {
  NAME: RI_MAE,
  mask_rand: True,
  use_cutmix: False,
  use_emd: False,

  transformer_config: {
    mask_ratio: [0.75, 0.75],
    trans_dim: 384,
    depth_encoder: 12,
    depth_predictor: 1,
    drop_path_rate: 0.1,
    cls_dim: 512,
    num_heads: 6,
    group_size: 32,
    num_group: 64,
    encoder_dims: 256,
  },

  ema_decay: 0.99,
  ema_end_decay: 0.9996,
  ema_anneal_end_step: 10000
}

total_bs : 128
step_per_update : 1
max_epoch : 300
clip_gradients: True
clip_grad: 3.0

consider_metric: CDL1